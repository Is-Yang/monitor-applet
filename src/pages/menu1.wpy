<template>
    <view class="menu1-container" style="padding-top: {{statusBarHeight + 44}}px">
        <van-nav-bar wx:if="{{isBindDept}}" title="监测预警" fixed custom-class="nav-reset" bind:click-left="toReport">
            <view slot="left">
                上报预警
            </view>
        </van-nav-bar>
        <van-nav-bar wx:if="{{!isBindDept}}" title="监测预警" fixed></van-nav-bar>
        <view wx:if="{{isBindDept}}" class="screen-page-wrap {{beginTime && endTime ? 'time-h' : ''}}" style="margin-top: {{statusBarHeight}}px;">
            <view class="box-view">
                <view class="flex-between">
                    <view class="screen-info">
                        <view class="opt" @tap="showScreenTime">
                            {{createTimeSort == '0' ? '预警时间从近到远' : createTimeSort == '1' ? '预警时间从远到近' : '筛选'}}
                            <van-icon name="arrow-down" color="#bbb" />
                        </view>

                        <view class="opt" @tap="showTimePoup">
                            时间范围
                            <van-icon name="arrow-down" color="#bbb" />
                        </view>
                    </view>
                    <view class="page-info">
                        <text>本月：{{monthNum.count}} 条</text>
                        <text class="split"> | </text>
                        <text>总共{{monthNum.total}}条</text>
                    </view>
                </view>

                <view wx:if="{{beginTime && endTime}}" class="time-info">
                    <text>{{beginTime}} 至 {{endTime}}</text>
                    <van-icon class="icon" name="cross" color="#bbb" size="16" @tap="removeTime" />
                </view>

                <view wx:if="{{timeScreen}}" class="screen-time">
                    <view class="opt" wx:for="{{timeOptions}}" wx:key="index" @tap="selectTime" data-id="{{item.id}}">{{item.label}}</view>
                </view>
            </view>
        </view>

        <view wx:if="{{isBindDept && listData.length > 0}}" class="list-wrap {{beginTime && endTime ? 'top-h' : ''}}">
            <view wx:for="{{listData}}" wx:key="index" wx:index="index" wx:for-item="item" class="item {{item.status == '0' ? 'not' : ''}}" data-id="{{item.yuJingId}}" @tap="toDetails">
                <view class="content">
                    <image wx:if="{{item.sysFiles && item.sysFiles[0] && item.sysFiles[0].fileUrl}}" 
                        src="{{item.sysFiles[0].fileUrl}}" mode="aspectFill" class="picture" />
                    <image wx:else src="../assets/images/default.png" mode="aspectFill" class="picture" />
                    <view class="full">
                        <view class="title">{{item.monitorArea.monitorAreaName}}</view>
                        <view class="desc">{{item.description}}</view>
                        <text class="time"> {{item.createTime}}</text>
                    </view>
                </view>
                <view class="user-info">
                    <view class="name">{{item.createBy}}</view>
                    <text class="state">{{item.status == '0' ? '未处理' : '已处理'}}</text>
                </view>
            </view>
        </view>
        <view wx:else class="no-data">
            <text>无预警信息</text>
        </view>

        <van-popup show="{{ showDate }}" closeable bind:close="onClosePopup" custom-class="custom-popup">
            <view class="date-wrap">
                <picker class="first" mode="date" value="{{beginTime}}" header-text="开始时间" bindchange="changeBeginTime">
                        {{beginTime ? beginTime : '开始时间'}}
                        <van-icon name="arrow-down" color="#bbb" />
                </picker>
                <text>至</text>
                <picker class="last" mode="date" value="{{endTime}}" header-text="结束时间" start="{{beginTime}}" bindchange="changeEndTime">
                        {{endTime ? endTime : '结束时间'}}
                        <van-icon name="arrow-down" color="#bbb" />
                </picker>
            </view>
            <button class="allow" bindtap="tapTime">确定</button>
        </van-popup>

        <canvas class="canvas-share" canvas-id="canvas"></canvas>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import * as api  from '../api/api'
    import decode from '../utils/util.js';
    export default class Menu1 extends wepy.page {
        config = {
            navigationBarTitleText: '监测预警',
            usingComponents: {
                "van-icon": "../components/vant/icon/index",
                "van-nav-bar": "../components/vant/nav-bar/index",
                "van-popup": "../components/vant/popup/index"
            },
            // enablePullDownRefresh: true
        }
        data = {
            statusBarHeight: wepy.$instance.globalData.statusBarHeight,
            timeScreen: false,
            isBindDept: false,
            timeOptions : [
                {
                    id: '0',
                    label: '预警时间从近到远'
                }, {
                    id: '1',
                    label: '预警时间从远到近'
                }
            ],
            createTimeSort: '1',
            beginTime: '',
            endTime: '',
            listData: [],
            monthNum: {
                count: 0,
                total: 0
            },
            page: {
                pageNum: 1,
                pageSize: 10,
                count: 0, 
                total: 0  
            },
            showDate: false
        }

        onShow() {
            this.isBindDept = wx.getStorageSync('isBindDept');
            console.log(this.isBindDept)
            this.$apply();
            this.getList('init');

            if (this.isBindDept) {
                wepy.$instance.queryUnread(3000)
            }
        }

        onHide() {
            if(this.isBindDept) {
                wepy.$instance.clearQuery()
            }
        }
        
        onLoad() {
            wepy.$instance.shareImage()
        }

        //下拉刷新
        // onPullDownRefresh() {
        //     this.getList('init');
        //     wx.stopPullDownRefresh();
        // }

        // 上拉加载
        onReachBottom() {
            if (this.page.total == this.listData.length) {
                return;
            }
            this.page.pageNum++;
            this.getList();
        }

        methods = {
            tapTime() {
                if (this.beginTime == '') {
                    wx.showToast({
                      title: '请选择开始时间', //提示的内容,
                      icon: 'none', //图标,
                      duration: 1000, //延迟时间,
                    });
                    return;
                }
                if (this.endTime == '') {
                    wx.showToast({
                      title: '请选择结束时间', //提示的内容,
                      icon: 'none', //图标,
                      duration: 1000, //延迟时间,
                    });
                    return;
                }
                this.getList('init');
                this.showDate = false;
                this.$apply();
            },
            removeTime() {
                this.beginTime = '';
                this.endTime = '';
                this.getList('init');
            },
            onClosePopup() {
                this.showDate = false;
                this.$apply();
            },
            showTimePoup() {
                this.showDate = true;
                this.$apply();
            },
            changeBeginTime(e) {
                this.beginTime = e.detail.value;
            },
            changeEndTime(e) {
                this.endTime = e.detail.value;
            },
            showScreenTime() {
                this.timeScreen = !this.timeScreen;
            },
            toReport() {
                wx.navigateTo({
                    url: '/pages/reportInfo'
                })
            },
            toDetails(e) {
                let id = e.currentTarget.dataset.id;
                wx.navigateTo({
                    url: '/pages/reportInfo?id=' + id
                })
            },
            selectTime(e) {
                this.createTimeSort = e.currentTarget.dataset.id;
                this.timeScreen = false;
                this.getList('init');
            }
        }

        async getList(reset) {
            if (reset == 'init') {
                this.page.total = 0;
                this.page.pageNum = 1;
                this.listData = [];
            }
            let { pageNum, pageSize } = this.page;

            let params = {
                pageNum: pageNum,
                pageSize: pageSize,
                beginTime: this.beginTime,
                endTime: this.endTime,
                createTimeSort: this.createTimeSort
            }

            let res = await api.appletsList(params);
            if (res.code == 200) {
                const { rows, total} = res.tableInfo;
                this.page.total = total;

                if (rows && rows.length > 0) {
                    this.listData = [...this.listData, ...rows]
                }
                
                this.listData.forEach(item => {
                    if (item.createBy) {
                        item.createBy = decode(item.createBy);
                    }
                });
                this.monthNum.total = res.page.count || 0;
                this.monthNum.count = res.page.total || 0;
                this.$apply();
            }
        }
    } 
</script>

<style lang="less">
    .menu1-container {
        .nav-reset {
            &.van-nav-bar {
                background-image: linear-gradient(0deg, #38c099 0%, #009788 100%), linear-gradient( #ededed, #ededed);
            }
            .van-nav-bar__left {
                padding: 10rpx 15rpx 10rpx 20rpx;
                border-radius: 25px;
                border: solid 1rpx #ffffff;
                background-color: transparent;
                color: #fff;
                line-height: 1.2;
                font-size: 24rpx;
                bottom: 10px;
                &::after {
                    content: "\F00A";
                    display: inline-block;
                    font-family: 'vant-icon';
                    font-size: 25rpx;
                    padding-left: 5rpx;
                    vertical-align: middle;
                }
                &:active {
                    opacity: 0.8;
                }
            }
        }
        .screen-page-wrap {
            position: fixed;
            top:44px;
            z-index: 1;
            width: 100%;
            height: 85rpx;
            background-color: #FAF7FA;
            .box-view {
                padding: 20rpx 15rpx;
                background-color: #fff;
                font-size: 25rpx;
                color: #333;
                box-sizing: border-box;
                position: relative;
                .screen-info {
                    display: flex;
                    align-items: center;
                    .opt {
                        padding: 0 10rpx;

                    }
                }
                .page-info {
                    text-align: right;
                    .split {
                        color: #ccc;
                        padding: 0 10rpx;
                    }
                }

                .screen-time {
                    position: absolute;
                    top: 75rpx;
                    background-color: #4c4c4c;
                    border-radius: 6rpx;
                    z-index: 9;
                    .opt {
                        color: #fff;
                        letter-spacing: 2rpx;
                        font-size: 26rpx;
                        padding: 23rpx 30rpx;
                        border-bottom: 1px solid #545454;

                        &:last-child {
                            border-bottom: none;
                        }
                    }

                    &:before {
                        content: "";
                        position: absolute;
                        display: block;
                        top: -10rpx;
                        left: 75rpx;
                        z-index: 11;
                        width: 25rpx;
                        height: 25rpx;
                        transform: rotate(45deg);
                        background-color: #4c4c4c;
                    }
                }
            }

            .time-info {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding-left: 15rpx;
                
                .icon {
                    width: 50rpx;
                    height: 50rpx;
                }
            }

            &.time-h {
                height: 130rpx;
            }
        }
        .list-wrap {
            padding-top: 85rpx;
            &.top-h {
                padding-top: 130rpx;
            }
            .item {
                display: flex;
                padding: 30rpx 20rpx 30rpx 30rpx;
                border-bottom: 1px solid #e5e5e5;
                font-size: 28rpx;
                color: #333333;
                .content {
                    display: flex;
                    flex: 1;
                    .full {
                        flex: 1;
                    }
                    .picture {
                        width: 120rpx;
                        height: 120rpx;
                        margin-right: 23rpx;
                        background-color: #eee;
                    }
                    .title {
                        margin-bottom: 10rpx;
                        line-height: 32rpx;
                        display: -webkit-box;
                        overflow: hidden;
                        text-overflow: ellipsis;
                        word-break: break-all;
                        -webkit-box-orient: vertical;
                        -webkit-line-clamp: 1;
                    }
                    .desc {
                        font-size: 24rpx;
                        margin-bottom: 10rpx;
                        line-height: 28rpx;
                        display: -webkit-box;
                        overflow: hidden;
                        text-overflow: ellipsis;
                        word-break: break-all;
                        -webkit-box-orient: vertical;
                        -webkit-line-clamp: 2;

                    }
                    .time {
                        font-size: 24rpx;
                        color: #999;
                    }
                }
                .user-info {
                    text-align: right;
                    margin-left: 50rpx;
                    .name {
                        margin-bottom: 8rpx;
                    }
                    .state {
                        display: inline-block;
                        padding: 8rpx 20rpx;
                        background-image: linear-gradient( #999999, #999999), linear-gradient( #52cc7a, #52cc7a);
                        border-radius: 25px;
                        color: #fff;
                        font-size: 24rpx;
                    }
                }
                &.not {
                    background-color: #ffffcc;
                    .state {
                        background-image: linear-gradient(0deg, #38c099 0%, #009788 100%), linear-gradient( #52cc7a, #52cc7a);
                    }
                }
            }
        }

        .flex-between {
            display: flex;
            justify-content: space-between;
        }

        .date-wrap {
            display: flex;
            margin-top: 35rpx;
            justify-content: center;
            .first, .last {
                width: 220rpx;
                text-align: center;
                color: #666;
            }
        }
    }
</style>

