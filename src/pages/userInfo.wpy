<template>
    <view class="user-info-container">
        <van-nav-bar title="我的信息" left-arrow left-text="返回" fixed custom-class="nav-reset" bind:click-left="onClickLeft" />
        <view class="operate-cell" style="padding-top: {{statusBarHeight}}px">
            <view class="cell">
                <view>
                    <image src="../assets/images/user.png" mode="aspectFit" />
                    <text>昵称</text>
                </view>
                <input value="{{ nickname }}" @input="nicknameInput" />
            </view>
            <view class="cell">
                <view>
                    <image src="../assets/images/phone.png" mode="aspectFit" class="icon-phone" />
                    <text>手机号</text>
                </view>
                <input type="number" value="{{ phone }}" @input="phoneInput" />
            </view>
        </view>
        <button class="complete" @tap="completeEdit">完成</button>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import * as api from '../api/api'
    export default class UserInfo extends wepy.page {
        config = {
            navigationBarTitleText: '我的信息',
            usingComponents: {
                "van-nav-bar": "../components/vant/nav-bar/index"
            }
        }
        data = {
            statusBarHeight: wepy.$instance.globalData.statusBarHeight,
            nickname: '',
            phone: '',
            userId: ''
        }

        onLoad() {
            const pages = getCurrentPages()
            const prevPage = pages[pages.length - 2]
            const {nickName, tel, userId} = prevPage.data.userInfo
            this.nickname = nickName;
            this.phone = tel;
            this.userId = userId;
            this.$apply();
        }

        methods = {
            nicknameInput(e) {
                this.nickname = e.detail.value;
            },
            phoneInput(e) {
                this.phone = e.detail.value;
            },
            completeEdit() {
                let params = JSON.stringify({
                    userId: this.userId,
                    phonenumber: this.phone,
                    nickName: this.nickname
                })
                this.updateUser(params);
            },
            onClickLeft() {
                wx.navigateBack({
                    delta: 1
                });
            }
        }

        async updateUser(params) {
            let res = await api.updateUser(params);
            if (res.code == 200) {
                wx.showToast({
                    title: res.msg,
                    icon: 'success',
                    duration: 1500
                });
                setTimeout(() => {
                    wx.navigateBack({
                        delta: 1
                    });
                }, 1000)
            }
        }
    }
</script>

<style lang="less">
    .user-info-container {
        .operate-cell {
            margin-top: 44px;
            .cell {
                display: flex;
                justify-content: space-between;
                padding: 28rpx 32rpx;
                border-bottom: 1px solid #f7f7f7;
                font-size: 26rpx;
                color: #333;
                image {
                    width: 53rpx;
	                height: 53rpx;
                    vertical-align: middle;
                    margin-right: 30rpx;
                }
                input {
                    text-align: right;
                    font-size: 28rpx;
                    color: #999999;
                }
            }
        }
        .complete {
            margin: 62rpx auto 0;
            width: 335rpx;
            height: 76rpx;
            line-height: 76rpx;
            background-image: linear-gradient(0deg, #38c099 0%, #59c89a 50%, #cfe49d 100%), linear-gradient( #e6e6e6, #e6e6e6);
            color: #fff;
            border-radius: 25px;
            font-size: 28rpx;
        }
    }
</style>

