<template>
    <view class="user-unit-container">
        <van-nav-bar title="我的单位" left-arrow left-text="返回" fixed custom-class="nav-reset" bind:click-left="onClickLeft" />
        <view class="head-wrap" style="height: {{statusBarHeight == 44 ? '360rpx' : '320rpx'}}">
            <image src="../assets/images/my_bg.png" class="bg" style="height: {{statusBarHeight == 44 ? '344rpx' : '300rpx'}}" />
            <view class="user-wrap">
                <view class="dept">{{userInfo.dept}}</view>
                <view class="display-flex">
                    <view class="mark">
                        <view>{{userInfo.nickName}} ({{ userInfo.userName || '--' }})</view>
                        <view wx:if="{{userInfo.firstRoleName}}">{{userInfo.firstRoleName}}</view>
                    </view>
                    <image src="{{userInfo.deptQrCode}}" mode="aspectFill" @tap="showQrCode" />
                </view>
            </view>
        </view>
        <view style="padding-top: {{statusBarHeight == 44 ? '360rpx' : '320rpx'}}; padding-bottom: 80rpx;">
            <view class="panel-wrap">
                <view class="title">单位信息</view>
                <view class="operate-cell">
                    <view class="cell">
                        <view>
                            <van-icon class="icon" name="contact" size="24" color="#38c099" />
                            <text>负责人</text>
                        </view>
                        <view class="right-txt" style="margin-right: 0;">
                            <view>{{userInfo.deptLeader}}</view>
                        </view>
                    </view>
                    <view class="cell">
                        <view>
                            <van-icon class="icon" name="phone-o" size="24" color="#38c099" />
                            <text>联系方式</text>
                        </view>
                        <view class="right-txt" style="margin-right: 0;">
                            <view>{{userInfo.deptContact}}</view>
                        </view>
                    </view>
                </view>
            </view>
            <view class="panel-wrap">
                <view class="title">用户列表</view>
                <van-collapse value="{{ activeNames }}" bind:change="onChangeColl">
                    <repeat wx:for="{{userList}}" wx:key="index" wx:index="index" wx:for-item="item">
                        <van-collapse-item name="{{index}}">
                            <view slot="title">
                                <van-icon class="icon" name="contact" size="24" color="#38c099" />
                                <text class="nickname">{{ item.nickname }}</text>
                                <text class="tel">({{ item.userName }})</text>
                            </view>
                            <view slot="value">
                                <text class="num">监测区域{{item.num}}/{{item.total}}</text>
                            </view>
                            <view class="operate-cell">
                                <view class="cell">
                                    <view>
                                        <van-icon class="icon" name="phone-o" size="24" color="#38c099" />
                                        <text>手机号</text>
                                    </view>
                                    <text class="right-txt">{{ item.phone }}</text>
                                </view>
                                <view wx:if="{{isOper}}" class="cell link" @tap="toRole" data-id="{{ item.id }}" data-roles="{{item.role}}">
                                    <view>
                                        <van-icon class="icon" name="manager-o" size="24" color="#38c099" />
                                        <text>角色</text>
                                    </view>
                                    <view class="right-txt" wx:if="{{item.role == ''}}">
                                        请选择
                                    </view>
                                    <view class="right-txt" wx:else>
                                        {{item.role}}
                                        <!-- <text wx:for="{{item.role}}" wx:for-item="item" wx:key="index">{{item.roleName}}</text> -->
                                    </view>
                                </view>
                                <view wx:if="{{!isOper}}" class="cell">
                                    <view>
                                        <van-icon class="icon" name="manager-o" size="24" color="#38c099" />
                                        <text>角色</text>
                                    </view>
                                    <text class="right-txt">{{ item.role }}</text>
                                </view>
                                <repeat wx:for="{{ item.site }}" wx:key="i" wx:index="i" wx:for-item="site">
                                    <view class="cell">
                                        <view>
                                            <van-icon class="icon" name="location-o" size="24" color="#38c099" />
                                            <text>{{site.name}}</text>
                                        </view>
                                        <switch disabled="{{!isOper}}" style="opacity: {{isOper ? '1' : '0.5'}}" checked="{{ site.check == 0 ? false : true }}" data-site="{{site}}" @change="onChangeSite" />
                                    </view>
                                </repeat>
                            </view>
                        </van-collapse-item>
                    </repeat>
                </van-collapse>
                <view wx:if="{{userPage.total > userList.length}}" class="more" @tap="getMoreUserList"><van-icon name="arrow-down" /></view>
            </view>
            <view wx:if="{{userInfo.firstDept}}" class="panel-wrap">
                <view class="title">上级单位</view>
                <view class="operate-cell">
                    <view class="cell">
                        <view>
                            <van-icon class="icon" name="label-o" size="24" color="#38c099" />
                            <text>{{userInfo.firstDept}}</text>
                        </view>
                    </view>
                </view>
            </view>
            <view wx:if="{{monitorList.length > 0}}" class="panel-wrap">
                <view class="title">监测区域</view>
                <view class="operate-cell">
                    <repeat wx:for="{{monitorList}}" wx:key="index" wx:index="index" wx:for-item="item">
                        <view class="cell link" data-title="{{item.monitorAreaName}}" @tap="toMonitorSite">
                            <view>
                                <van-icon class="icon" name="location-o" size="24" color="#38c099" />
                                <text>{{item.monitorAreaName}}</text>
                            </view>
                            <view class="right-txt">
                                <view>经度：{{item.lng}}，纬度：{{item.lat}}</view>
                            </view>
                        </view>
                    </repeat>
                </view>
            </view>
        </view>

        <button class="btn-bottom" @tap="outUnit">退出单位</button>

        <van-popup show="{{ previewQrcode }}" closeable bind:close="onClosePopup" custom-class="popup-qrcode">
            <view class="title">单位二维码</view>
            <view class="dept">{{userInfo.dept}}</view>
            <image class="qr" src="{{userInfo.deptQrCode}}" />
        </van-popup>

        <canvas class="canvas-share" canvas-id="canvas"></canvas>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import * as api from '../api/api'
    import decode from '../utils/util.js';
    export default class UserUnit extends wepy.page {
        config = {
            navigationBarTitleText: '我的单位',
            usingComponents: {
                "van-icon": "../components/vant/icon/index",
                "van-nav-bar": "../components/vant/nav-bar/index",
                "van-collapse": "../components/vant/collapse/index",
                "van-collapse-item": "../components/vant/collapse-item/index",
                "van-popup": "../components/vant/popup/index"
            }
        }
        data = {
            statusBarHeight: wepy.$instance.globalData.statusBarHeight,
            activeNames: [],
            userList: [],
            monitorList: [], // 监测区域
            isOper: false,  // 是否可操作关闭
            roleRange: [],
            userPage: {
                pageNum: 1,
                pageSize: 5,
                total: 0,
            },
            monitorPage: {
                pageNum: 1,
                pageSize: 10,
                total: 0,
            },
            userInfo: {
                userId: '',  // 用户Id， 用于查询设备列表
                userName: '', // 用户名
                nickName: '',  // 用户昵称
                deptQrCode: '',  // 单位二维码
                deptLeader: '', // 负责人
                dept: '', // 部门
                deptContact: '', // 联系方式
                firstRoleName: '',  // 角色
                firstDept: '',  // 上级单位
            },
            role: '',
            previewQrcode: false,  // 预览二维码
        }

        onShow() {
            this.getMyInfo();
            this.getMoitorList('init');
            this.getUserList('init');
        }

        onLoad() {
            wepy.$instance.shareImage()
        }

        // 上拉加载
        onReachBottom() {
            if (this.monitorPage.total == this.monitorList.length) {
                return;
            }
            this.monitorPage.pageNum++;
            this.getMoitorList();
        }

        methods = {
            // 退出单位
            outUnit() {
                this.uniteDept();
            },
            onChangeSite(e) {
                let check = e.detail.value ? 1 : 0;
                let data = e.target.dataset.site;
                let params = {
                    check: check,
                    id: data.id,
                    name: data.name,
                    userId: data.userId
                }
                this.userChangeStatus(JSON.stringify(params))
            },
            showQrCode() {
                this.previewQrcode = true;
            },
            onClosePopup() {
                this.previewQrcode = false;
            },
            onChangeColl(e) {
                this.activeNames = e.detail;
            },
            onClickLeft() {
                wx.navigateBack({
                    delta: 1
                });
            },
            toRole(e) {
                this.role = e.currentTarget.dataset.roles;
                let id = e.currentTarget.dataset.id;
                wx.navigateTo({
                    url: '/pages/package/roleList?id=' + id
                });
            },
            toMonitorSite(e) {
                let title = e.currentTarget.dataset.title;
                wx.navigateTo({
                    url: '/pages/package/monitorSite?title=' + title
                });
            },
            getMoreUserList() {
                if (this.userPage.total == this.userList.length) {
                    return;
                }
                this.userPage.pageNum++;
                this.getUserList();
            },
            onChangeRole(e) {
                this.roleIndex = e.detail.value;
            }
        }

        async uniteDept() {
            let res = await api.uniteDept();
            if(res.code == 200) {
                // 设置缓存未绑定部门
                wx.setStorageSync('isBindDept', false);
                
                wx.showToast({
                    title: res.msg,
                    icon: 'success',
                    duration: 1500
                });
                setTimeout(() => {
                    wx.navigateBack({
                        delta: 1
                    });
                }, 1000)
            } 
        }

        async userChangeStatus(params) {
            let res = await api.userChangeStatus(params);
            if(res.code == 200) {
                wx.showToast({
                    title: res.msg,
                    icon: 'success',
                    duration: 1500
                });
            } else {
                wx.showToast({
                    title: res.msg,
                    icon: 'none',
                    duration: 1500
                });
                setTimeout(() => {
                    this.getUserList('init');
                    this.$apply();
                }, 1500);
            }
        }

        // 获取我的信息
        async getMyInfo() {
            let res = await api.getMyInfo();
            if(res.code == 200) {
                this.userInfo = res.userInfo;
                if(res.userInfo.nickName) {
                    this.userInfo.nickName = decode(res.userInfo.nickName)
                }
                let base64Image = res.userInfo.deptQrCode;
                if (base64Image) {
                    let imgData = base64Image.replace(/[\r\n]/g, '');
                    this.userInfo.deptQrCode = 'data:image/png;base64,' + imgData;
                }
                this.$apply();
            }
        }

        // 获取监测列表
        async getMoitorList(reset) {
            if (reset == 'init') {
                this.monitorPage.total = 0;
                this.monitorPage.pageNum = 1;
                this.monitorList = [];
            }
            let { pageNum, pageSize } = this.monitorPage;

            let params = {pageNum, pageSize}
            let res = await api.getMoitorList(params);
            if(res.code == 200 && res.monitorAreaList) {
                const { rows, total } = res.monitorAreaList;
                if (rows && rows.length > 0) {
                    this.monitorList = [...this.monitorList, ...rows]
                }
                this.monitorList.forEach(item => {
                    if (item.person) {
                        item.person = decode(item.person);
                    }
                });
                this.monitorPage.total = total;
                this.$apply();
            }
        }
        // 获取用户列表
        async getUserList(reset) {
            let { pageNum, pageSize } = this.userPage;
            if (reset == 'init') {
                this.userPage.total = 0;
                pageNum = 1;
                this.userList = [];
            }
            let params = {pageNum, pageSize}

            let res = await api.getDeptUserList(params);
            if(res.code == 200) {
                const { rows, total } = res.userList;
                if (rows.length > 0) {
                    this.userList = [...this.userList, ...rows]
                }
                this.userList.forEach(item => {
                    if (item.nickname) {
                        item.nickname = decode(item.nickname);
                    }
                });
                this.userPage.total = total;
                this.isOper = res.isOper;
                this.$apply();
            }
        }
    }
</script>

<style lang="less">
    page {
        background-color: #FAF7FA;
    }
    .user-unit-container {
        .head-wrap {
            position: fixed;
            width: 100%;
            height: 320rpx;
            z-index: 1;
            background-color: #FAF7FA;
            .user-wrap {
                position: absolute;
                right: 27rpx;
                bottom: 10rpx;
                z-index: 2;
                color: #fff;
                .dept {
                    font-size: 32rpx;
                    margin-bottom: 5rpx;
                    text-align: right;
                }
                .display-flex {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                }
                image {
                    width: 120rpx;
                    height: 120rpx;
                    background-color: #ffffff;
                }
                .mark {
                    margin-right: 21rpx;
                    font-size: 28rpx;
                    color: #fff;
                    text-align: right;
                }
            }
            .bg {
                width: 100%;
                height: 300rpx;
            }
        }
        .panel-wrap {
            margin-bottom: 20rpx;
            font-size: 26rpx;
            border-bottom: 1px solid #f7f7f7;

            .title {
                font-size: 24rpx;
                color: #666;
                padding: 15rpx 23rpx;
            }
            .icon {
                margin-right: 10rpx;
                vertical-align: middle;
            }
            .nickname {
                display: inline-block;
                min-width: 100rpx;
                margin-right: 10rpx;
                color: #333;
            }
            .tel {
                color: #999;
            }
            .num {
                padding-right: 10rpx;
            }
            .van-collapse-item__content {
                padding: 0 0 0 75rpx;
            }
        }
        .operate-cell {
            .cell {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 21rpx 26rpx;
                height: 88rpx;
                border-bottom: 1px solid #f7f7f7;
                font-size: 28rpx;
                color: #999999;
                box-sizing: border-box;
                background-color: #fff;
                &:last-child {
                    border-bottom: none;
                }
                image {
                    width: 48rpx;
                    height: 48rpx;
                    vertical-align: middle;
                    margin-right: 15rpx;
                }
                input,
                .right-txt {
                    flex: 1;
                    margin-right: 50rpx;
                    text-align: right;
                    font-size: 26rpx;
                    color: #333;
                }
                &.link {
                    position: relative;
                    &:after {
                        content: '\F00A';
                        position: absolute;
                        top: 50%;
                        right: 32rpx;
                        transform: translateY(-50%);
                        font-family: 'vant-icon';
                        color: #969799;
                        font-size: 30rpx;
                    }
                    &:active {
                        background-color: #f2f3f5;
                    }
                }
            }
        }
        .font21 {
            font-size: 21rpx!important;
        }
        .van-nav-bar {
            background-image: none;
        }
        .van-hairline--bottom:after {
            border: none;
        }
        .van-cell__value {
            flex: none;
        }

        .more {
            width: 50%;
            margin: 0 auto;
            height: 50rpx;
            line-height: 50rpx;
            background-color: #fff;
            border: 1px solid #f1f1f1;
            border-top: none;
            border-bottom-left-radius: 4px;
            border-bottom-right-radius: 4px;
            text-align: center;
            font-size: 32rpx;
            color: #666;
        }

        .popup-qrcode {
            width: 90%;
            padding: 20rpx 0;
            text-align: center;

            .title {
                font-size: 30rpx;
                margin: 25rpx 0 35rpx;
                color: #666;
            }
            .dept {
                font-size: 36rpx;

            }
            .qr {
                width: 600rpx;
                height: 600rpx
            }
        }
    }
</style>

